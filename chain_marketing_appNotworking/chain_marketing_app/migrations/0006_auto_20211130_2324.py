# Generated by Django 3.2.5 on 2021-11-30 17:54

import chain_marketing_app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('chain_marketing_app', '0005_auto_20211104_0338'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveCityDistibuter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('pin_code', models.IntegerField(blank=True, default='411044', null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Active City Distibuter',
                'verbose_name_plural': 'Active City Distibuter',
            },
        ),
        migrations.CreateModel(
            name='ActiveDistrictDistibuter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Active DistrictDistibuter',
                'verbose_name_plural': 'Active DistrictDistibuter',
            },
        ),
        migrations.CreateModel(
            name='ActiveMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Active Member',
                'verbose_name_plural': 'Active Members',
            },
        ),
        migrations.CreateModel(
            name='ActiveSeller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('bonus_points', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Active Seller',
                'verbose_name_plural': 'Active Sellers',
            },
        ),
        migrations.CreateModel(
            name='ActiveTalukaDistibuter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Active TalukaDistibuter',
                'verbose_name_plural': 'Active TalukaDistibuter',
            },
        ),
        migrations.CreateModel(
            name='AdminAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_payout', models.FloatField()),
                ('balance_after_deduction', models.FloatField()),
                ('distributed_payout', models.FloatField()),
                ('tds', models.FloatField()),
                ('std', models.FloatField()),
                ('total_balance', models.FloatField()),
                ('dp', models.FloatField()),
                ('bonus', models.FloatField()),
                ('difference', models.FloatField()),
            ],
            options={
                'verbose_name': 'Admin Accounts',
                'verbose_name_plural': 'Admin Acounts',
            },
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_account', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_ifsc', models.CharField(blank=True, max_length=255, null=True)),
                ('nominee', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='CommonFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller_bonus', models.IntegerField(blank=True, null=True)),
                ('introducer_bonus', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Common Fields',
                'verbose_name_plural': 'Common Fields',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='chain_product/')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Image',
            },
        ),
        migrations.CreateModel(
            name='Introducer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Introducer',
                'verbose_name_plural': 'Introducers',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_no', models.CharField(blank=True, default=chain_marketing_app.models.unique_order, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('total_amount', models.IntegerField(blank=True, null=True)),
                ('is_generated', models.BooleanField(default=False)),
                ('is_transfer', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, default='unpaid', max_length=255, null=True)),
                ('delivery', models.CharField(blank=True, default='no delivery yet', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(blank=True, max_length=255, null=True)),
                ('product_id', models.IntegerField(blank=True, default=1, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('is_generated', models.BooleanField(default=False)),
                ('is_transfer', models.BooleanField(default=False)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('generated', models.IntegerField(blank=True, default=0, null=True)),
                ('transfer_in', models.IntegerField(blank=True, default=0, null=True)),
                ('transfer_out', models.IntegerField(blank=True, default=0, null=True)),
                ('quantity_delivered', models.IntegerField(default=0)),
                ('quantity_undelivered', models.IntegerField(blank=True, default=0, null=True)),
                ('quantity_sold', models.IntegerField(blank=True, default=0, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_detail', to='chain_marketing_app.order')),
            ],
            options={
                'verbose_name': 'Order Details',
                'verbose_name_plural': 'Order Details',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubProductsStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'SubProductsStock',
                'verbose_name_plural': 'SubProductsStocks',
            },
        ),
        migrations.CreateModel(
            name='Taluka',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taluka', models.CharField(blank=True, max_length=255, null=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='district_taluka', to='chain_marketing_app.district')),
            ],
            options={
                'verbose_name': 'Taluka',
                'verbose_name_plural': 'Talukas',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.DeleteModel(
            name='APK',
        ),
        migrations.AlterModelOptions(
            name='memberactivationkey',
            options={'verbose_name': 'Member Activation Key', 'verbose_name_plural': 'Member Activation Keys'},
        ),
        migrations.RemoveField(
            model_name='addproduct',
            name='extra_image',
        ),
        migrations.RemoveField(
            model_name='addproduct',
            name='image',
        ),
        migrations.RemoveField(
            model_name='memberaccount',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='memberaccount',
            name='is_distributer',
        ),
        migrations.RemoveField(
            model_name='memberaccount',
            name='is_seller',
        ),
        migrations.RemoveField(
            model_name='payout',
            name='seller',
        ),
        migrations.AddField(
            model_name='addproduct',
            name='MRP',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='Price',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='active25_bonus',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='add_package_product',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='category',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='created_by',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='user_product', to='account.useraccount'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='addproduct',
            name='has_key',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='is_package',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='is_package_product',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='is_published',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='max_payout',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='points_to_buyer',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='points_to_city_distributer',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='points_to_district_distributer',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='points_to_taluka_distributer',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='product_type',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='quantity',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='seller_bonus',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='std_deduction',
            field=models.IntegerField(blank=True, default=10, null=True),
        ),
        migrations.AddField(
            model_name='addproduct',
            name='tds',
            field=models.IntegerField(blank=True, default=10, null=True),
        ),
        migrations.AddField(
            model_name='memberaccount',
            name='city',
            field=models.CharField(blank=True, default='Pune', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='memberaccount',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='memberaccount',
            name='district',
            field=models.CharField(blank=True, default='Pune', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='memberaccount',
            name='pin_code',
            field=models.IntegerField(blank=True, default='411044', null=True),
        ),
        migrations.AddField(
            model_name='memberaccount',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='payout',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='payout',
            name='declared',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='payout',
            name='description',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='payout',
            name='from_member',
            field=models.ForeignKey(default='urja', on_delete=django.db.models.deletion.CASCADE, related_name='payout_from_member', to='chain_marketing_app.memberaccount'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='payout',
            name='member',
            field=models.ForeignKey(default='urja', on_delete=django.db.models.deletion.CASCADE, related_name='payout_member', to='chain_marketing_app.memberaccount'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='payout',
            name='name',
            field=models.CharField(default='as', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='payout',
            name='payment',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='payout',
            name='payout',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='payout',
            name='points',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='payout',
            name='std_deduction',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='payout',
            name='tds',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='payout',
            name='type',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='payout',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='addproduct',
            name='description',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='level',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='chain_marketing_app.addproduct'),
        ),
        migrations.AlterField(
            model_name='memberaccount',
            name='member_id',
            field=models.CharField(blank=True, default=chain_marketing_app.models.unique_rand, max_length=100, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='memberactivationkey',
            name='key',
            field=models.CharField(blank=True, default=chain_marketing_app.models.unique_memberid, max_length=100, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterUniqueTogether(
            name='level',
            unique_together={('product', 'level')},
        ),
        migrations.DeleteModel(
            name='ProductsOwned',
        ),
        migrations.AddField(
            model_name='subproductsstock',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_details', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='subproductsstock',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_product', to='chain_marketing_app.addproduct'),
        ),
        migrations.AddField(
            model_name='sale',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_member', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='sale',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_product', to='chain_marketing_app.addproduct'),
        ),
        migrations.AddField(
            model_name='sale',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_member', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='order_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_account', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='order',
            name='orded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_by', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='order',
            name='ordered_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_from', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='introducer',
            name='distributer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='distributer', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='introducer',
            name='introducer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='introducer_details', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='image',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_image', to='chain_marketing_app.addproduct'),
        ),
        migrations.AddField(
            model_name='city',
            name='taluka',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taluka_city', to='chain_marketing_app.taluka'),
        ),
        migrations.AddField(
            model_name='bankdetails',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_details', to='chain_marketing_app.addproduct'),
        ),
        migrations.AddField(
            model_name='activetalukadistibuter',
            name='distributer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_taluka', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='activeseller',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_seller', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='activemember',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_member', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='activedistrictdistibuter',
            name='distributer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_district', to='chain_marketing_app.memberaccount'),
        ),
        migrations.AddField(
            model_name='activecitydistibuter',
            name='distributer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_city', to='chain_marketing_app.memberaccount'),
        ),
    ]
